package com.orienttech.statics.web.controller.data;

import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.orienttech.statics.commons.base.BaseController;
import com.orienttech.statics.commons.base.Result;
import com.orienttech.statics.commons.security.SessionUser;
import com.orienttech.statics.commons.utils.FileUtils;
import com.orienttech.statics.commons.utils.PropertiesConstants;
import com.orienttech.statics.dao.entity.fixednum.FinIndexFixed;
import com.orienttech.statics.dao.entity.fixednum.FinIndexFixedPK;
import com.orienttech.statics.service.fixednum.FixednumService;
import com.orienttech.statics.service.sysmng.MenuService;
import com.orienttech.statics.web.controller.report.HistoryReportController;

@Controller
@RequestMapping("/fixedDataMng")
public class FixedDataMngController extends BaseController {
	private Log log=LogFactory.getLog(HistoryReportController.class);
	@Autowired
	private MenuService menuService;

	@Autowired
	private FixednumService fixednumService;

	@RequestMapping
	public String index(Long functionId, Model model) {
		model.addAttribute("menu", menuService.findMenu(functionId));
		// 指标
		model.addAttribute("indexs", fixednumService.findFinIndexInfo());
		// 月份
		model.addAttribute("months", getMonths());
		return "data/fixedDataMng";
	}

	/**
	 * 月份
	 * 
	 * @return
	 */
	public List<String> getMonths() {
		Calendar currentYear = Calendar.getInstance();
		String minDate = "201401";
		String maxDate = String.valueOf(currentYear.get(Calendar.YEAR) + 1).concat("12");

		List<String> result = new ArrayList<String>();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");// 格式化为年月

		Calendar min = Calendar.getInstance();
		Calendar max = Calendar.getInstance();

		try {
			min.setTime(sdf.parse(minDate));
			min.set(min.get(Calendar.YEAR), min.get(Calendar.MONTH), 1);
			max.setTime(sdf.parse(maxDate));
			max.set(max.get(Calendar.YEAR), max.get(Calendar.MONTH), 2);
			Calendar curr = min;
			while (curr.before(max)) {
				result.add(sdf.format(curr.getTime()));
				curr.add(Calendar.MONTH, 1);
			}
		} catch (ParseException e) {
			// 月份加载错误
		}
		return result;
	}

	/**
	 * 查询固定数据
	 * 
	 * @param indexId
	 *            指标编号
	 * @param fperiodnumber
	 *            月份
	 */
	@RequestMapping(value = "/queryDatas", method = RequestMethod.POST)
	@ResponseBody
	public Result searchFixedNumber(String indexId, String fperiodnumber) {
		SessionUser sUser = getSessionUser();
		return success(fixednumService.searchFixedNumber(indexId,
				fperiodnumber, sUser));
	}

	/**
	 * 初始化数据
	 * 
	 * @param request
	 */
	@RequestMapping(value = "/initDatas", method = RequestMethod.POST)
	@ResponseBody
	public Result initDatas(boolean iscopy, String indexId, String fperiodnumber) {
		SessionUser sUser = getSessionUser();
		List<FinIndexFixed> list = new ArrayList<FinIndexFixed>(0);
		list = fixednumService.initDatas(iscopy, indexId, fperiodnumber, sUser);
		return success(list);
	}

	/**
	 * 保存数据
	 * 
	 * @param request
	 */
	@RequestMapping(value = "/saveDatas", method = RequestMethod.POST)
	@ResponseBody
	public Result saveDatas(HttpServletRequest request) {

		FinIndexFixed fixed = new FinIndexFixed();
		FinIndexFixedPK pk = new FinIndexFixedPK();

		pk.setIndexId(request.getParameter("indexId"));// 指标id
		pk.setDetailNo(request.getParameter("detailNo"));// 指标详情id
		pk.setId(request.getParameter("orgId"));// 机构id
		pk.setFperiodnumber(request.getParameter("fperiodNumber"));// 月份
		BigDecimal bd = new BigDecimal(request.getParameter("je").toString());// 数值金额
		fixed.setJe(bd = bd.setScale(2, BigDecimal.ROUND_HALF_UP));
		fixed.setMemo(request.getParameter("memo"));
		fixed.setFinIndexFixedPK(pk);

		return fixednumService.save(fixed) == true ? success() : failure();
	}
	
	
	
	/**
	 * 下载
	 * @param fileName
	 * @param req
	 * @param resp
	 * @throws Exception 
	 */
	@RequestMapping(value = "/download")
	@ResponseBody
	public String download(String fileName,HttpServletRequest req,HttpServletResponse resp) throws Exception{
		String filePath = System.getProperty("user.home") + PropertiesConstants.getString(PropertiesConstants.HISTORY_REPORT_PATH)+File.separator+fileName;
		log.info(filePath);
		try {
			File file=new File(filePath);
			if(FileUtils.isExists(file)){
				fixednumService.downloadExcel("Org", req, resp);
			}else{
				return "文件不存在";
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return "";
	}
	
	
	
	
}
