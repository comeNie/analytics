package com.orienttech.statics.web.controller.sysmng;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.orienttech.statics.commons.base.BaseController;
import com.orienttech.statics.commons.base.Result;
import com.orienttech.statics.commons.datatables.DataTablesPage;
import com.orienttech.statics.commons.utils.Utils;
import com.orienttech.statics.dao.entity.Role;
import com.orienttech.statics.service.sysmng.RoleMngService;

@Controller
@RequestMapping("/roleMng")
public class RoleMngController extends BaseController {

	@Autowired
	private RoleMngService roleMngService;

	@RequestMapping
	public String index() {
		return "sysMng/roleMng";
	}

	/**
	 * 分页查询所有角色
	 * 
	 * @param draw
	 * @param firstIndex
	 * @param pageSize
	 * @return
	 */
	@RequestMapping(value = "/findAll", method = RequestMethod.POST)
	@ResponseBody
	public DataTablesPage findAll(Role role, Integer draw,
			@RequestParam("search[value]") String search,
			@RequestParam("start") Integer firstIndex,
			@RequestParam("length") Integer pageSize) {

		Page<Role> page = roleMngService.findAll(role, search, firstIndex
				/ pageSize + 1, pageSize);
		return Utils.transferToJqueryDataTablesFormat_v110(draw, page);
	}

	/**
	 * 不分页查询所有角色
	 * 
	 * @param draw
	 * @param firstIndex
	 * @param pageSize
	 * @return
	 */
	@RequestMapping(value = "/findAllRole", method = RequestMethod.POST)
	@ResponseBody
	public Result findAll() {
		List<Role> rlist = roleMngService.findAll();
		return rlist.size() <= 0 ? failure() : success(rlist);
	}

	/**
	 * 新增角色
	 */
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	@ResponseBody
	public Result addRole(Role role) {
		roleMngService.add(role);
		return success();
	}

	/**
	 * 修改角色
	 */
	@RequestMapping(value = "/modify", method = RequestMethod.POST)
	@ResponseBody
	public Result modifyRole(Role role) {
		roleMngService.modify(role);
		return success();
	}

	/**
	 * 修改或增加角色
	 */
	@RequestMapping(value = "/addOrModify", method = RequestMethod.POST)
	@ResponseBody
	public Result addOrModify(String flag,Role role){
		if(flag.equals("1")){
			roleMngService.modify(role);
			return success();
		}else{
			roleMngService.add(role);
			return success();
		}
	}
	
	/**
	 * 验证角色名称是否存在
	 */
	@RequestMapping(value = "/validateRoleName", method = RequestMethod.POST)
	@ResponseBody
	public boolean validateRoleName(int id,String name, String flag) {
		return roleMngService.getCountByName(id,name.trim(), flag);
	}

	/**
	 * 查找角色对象
	 */
	@RequestMapping(value = "/findRoleById", method = RequestMethod.POST)
	@ResponseBody
	public Result findRoleById(Integer id) {
		return success(roleMngService.findById(id));
	}

	/**
	 * 保存角色分配的权限
	 */
	@RequestMapping(value = "/saveRoleFunction", method = RequestMethod.POST)
	@ResponseBody
	public Result saveFunction(Integer roleId, String functionId) {
		roleMngService.saveFunction(roleId, functionId);
		return success();

	}

	/**
	 * 删除角色分配的权限
	 */
	@RequestMapping(value = "/deleteRoleFunction", method = RequestMethod.POST)
	@ResponseBody
	public Result deleteFunction(Integer roleId) {
		roleMngService.deleteFunction(roleId);
		return success();

	}
	
	
	
	/**
	 * 保存Dashboard分配的权限
	 */
	@RequestMapping(value = "/saveDashboardRoleFunction", method = RequestMethod.POST)
	@ResponseBody
	public Result saveDashboardFunction(String roleId, String functionId) {
		roleMngService.saveDashboardFunction(roleId, functionId);
		return success();

	}

	/**
	 * 删除Dashboard分配的权限
	 */
	@RequestMapping(value = "/deleteDashboardRoleFunction", method = RequestMethod.POST)
	@ResponseBody
	public Result deleteDashboardFunction(String roleId) {
		roleMngService.deleteDashboardFunction(roleId);
		return success();

	}
	
	
	
	
	
	
}
